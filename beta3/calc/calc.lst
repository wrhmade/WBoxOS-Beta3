     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_api_cmdline
     7 00000000                                 	EXTERN	_sprintf
     8 00000000                                 	EXTERN	_api_putstr0
     9 00000000                                 	EXTERN	_api_end
    10 00000000                                 	EXTERN	_strtol
    11 00000000                                 [FILE "calc.c"]
    12                                          [SECTION .data]
    13 00000000                                 LC1:
    14 00000000 D4 AD CA BD 20 3D 20 25 64 20   	DB	0xD4,0xAD,0xCA,0xBD," = %d = 0x%x",0x0A,0x00
       0000000A 3D 20 30 78 25 78 0A 00 
    15 00000012                                 LC0:
    16 00000012 B7 C7 B7 A8 B1 ED B4 EF CA BD   	DB	0xB7,0xC7,0xB7,0xA8,0xB1,0xED,0xB4,0xEF,0xCA,0xBD,0x0A,0x00
       0000001C 0A 00 
    17                                          [SECTION .text]
    18 00000000                                 	GLOBAL	_HariMain
    19 00000000                                 _HariMain:
    20 00000000 55                              	PUSH	EBP
    21 00000001 89 E5                           	MOV	EBP,ESP
    22 00000003 53                              	PUSH	EBX
    23 00000004 83 EC 24                        	SUB	ESP,36
    24 00000007 8D 5D DC                        	LEA	EBX,DWORD [-36+EBP]
    25 0000000A 6A 1E                           	PUSH	30
    26 0000000C 53                              	PUSH	EBX
    27 0000000D E8 [00000000]                   	CALL	_api_cmdline
    28 00000012 89 D9                           	MOV	ECX,EBX
    29 00000014 58                              	POP	EAX
    30 00000015 89 5D D8                        	MOV	DWORD [-40+EBP],EBX
    31 00000018 5A                              	POP	EDX
    32 00000019 80 7D DC 20                     	CMP	BYTE [-36+EBP],32
    33 0000001D 7E 13                           	JLE	L10
    34 0000001F 8D 55 DD                        	LEA	EDX,DWORD [-35+EBP]
    35 00000022                                 L6:
    36 00000022 89 D0                           	MOV	EAX,EDX
    37 00000024 89 55 D8                        	MOV	DWORD [-40+EBP],EDX
    38 00000027 8D 51 02                        	LEA	EDX,DWORD [2+ECX]
    39 0000002A 89 C1                           	MOV	ECX,EAX
    40 0000002C 80 7A FF 20                     	CMP	BYTE [-1+EDX],32
    41 00000030 7F F0                           	JG	L6
    42 00000032                                 L10:
    43 00000032 6A 09                           	PUSH	9
    44 00000034 8D 45 D8                        	LEA	EAX,DWORD [-40+EBP]
    45 00000037 50                              	PUSH	EAX
    46 00000038 E8 0000004E                     	CALL	_getnum
    47 0000003D 5A                              	POP	EDX
    48 0000003E 59                              	POP	ECX
    49 0000003F 3D 80000001                     	CMP	EAX,-2147483647
    50 00000044 74 23                           	JE	L11
    51 00000046 50                              	PUSH	EAX
    52 00000047 8D 5D DC                        	LEA	EBX,DWORD [-36+EBP]
    53 0000004A 50                              	PUSH	EAX
    54 0000004B 68 [00000000]                   	PUSH	LC1
    55 00000050 53                              	PUSH	EBX
    56 00000051 E8 [00000000]                   	CALL	_sprintf
    57 00000056 53                              	PUSH	EBX
    58 00000057 E8 [00000000]                   	CALL	_api_putstr0
    59 0000005C 83 C4 14                        	ADD	ESP,20
    60 0000005F                                 L8:
    61 0000005F E8 [00000000]                   	CALL	_api_end
    62 00000064 8B 5D FC                        	MOV	EBX,DWORD [-4+EBP]
    63 00000067 C9                              	LEAVE
    64 00000068 C3                              	RET
    65 00000069                                 L11:
    66 00000069 68 [00000012]                   	PUSH	LC0
    67 0000006E E8 [00000000]                   	CALL	_api_putstr0
    68 00000073 58                              	POP	EAX
    69 00000074 EB E9                           	JMP	L8
    70 00000076                                 	GLOBAL	_skipspace
    71 00000076                                 _skipspace:
    72 00000076 55                              	PUSH	EBP
    73 00000077 89 E5                           	MOV	EBP,ESP
    74 00000079 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
    75 0000007C 80 38 20                        	CMP	BYTE [EAX],32
    76 0000007F 74 02                           	JE	L17
    77 00000081                                 L19:
    78 00000081 5D                              	POP	EBP
    79 00000082 C3                              	RET
    80 00000083                                 L17:
    81 00000083 40                              	INC	EAX
    82 00000084 80 38 20                        	CMP	BYTE [EAX],32
    83 00000087 74 FA                           	JE	L17
    84 00000089 EB F6                           	JMP	L19
    85                                          [SECTION .data]
    86 0000001E                                 LC2:
    87 0000001E 30 B2 BB C4 DC CE AA B3 FD CA   	DB	"0",0xB2,0xBB,0xC4,0xDC,0xCE,0xAA,0xB3,0xFD,0xCA,0xFD,0x0A,0x00
       00000028 FD 0A 00 
    88                                          [SECTION .text]
    89 0000008B                                 	GLOBAL	_getnum
    90 0000008B                                 _getnum:
    91 0000008B 55                              	PUSH	EBP
    92 0000008C 89 E5                           	MOV	EBP,ESP
    93 0000008E 57                              	PUSH	EDI
    94 0000008F 56                              	PUSH	ESI
    95 00000090 53                              	PUSH	EBX
    96 00000091 BB 80000001                     	MOV	EBX,-2147483647
    97 00000096 50                              	PUSH	EAX
    98 00000097 50                              	PUSH	EAX
    99 00000098 8B 7D 08                        	MOV	EDI,DWORD [8+EBP]
   100 0000009B 8B 75 0C                        	MOV	ESI,DWORD [12+EBP]
   101 0000009E 8B 07                           	MOV	EAX,DWORD [EDI]
   102 000000A0 50                              	PUSH	EAX
   103 000000A1 89 45 F0                        	MOV	DWORD [-16+EBP],EAX
   104 000000A4 E8 FFFFFFCD                     	CALL	_skipspace
   105 000000A9 83 C4 04                        	ADD	ESP,4
   106 000000AC 89 C1                           	MOV	ECX,EAX
   107 000000AE 89 45 F0                        	MOV	DWORD [-16+EBP],EAX
   108 000000B1 8A 00                           	MOV	AL,BYTE [EAX]
   109 000000B3 3C 2B                           	CMP	AL,43
   110 000000B5 0F 84 0000038C                  	JE	L82
   111 000000BB 3C 2D                           	CMP	AL,45
   112 000000BD 0F 84 00000356                  	JE	L83
   113 000000C3 3C 7E                           	CMP	AL,126
   114 000000C5 0F 84 00000320                  	JE	L84
   115 000000CB 3C 28                           	CMP	AL,40
   116 000000CD 0F 84 000002E1                  	JE	L85
   117 000000D3 83 E8 30                        	SUB	EAX,48
   118 000000D6 3C 09                           	CMP	AL,9
   119 000000D8 0F 86 000002C0                  	JBE	L86
   120 000000DE                                 L36:
   121 000000DE 81 FB 80000001                  	CMP	EBX,-2147483647
   122 000000E4 0F 84 000000CF                  	JE	L37
   123 000000EA FF 75 F0                        	PUSH	DWORD [-16+EBP]
   124 000000ED E8 FFFFFF84                     	CALL	_skipspace
   125 000000F2 5A                              	POP	EDX
   126 000000F3 89 45 F0                        	MOV	DWORD [-16+EBP],EAX
   127 000000F6 80 38 2B                        	CMP	BYTE [EAX],43
   128 000000F9 75 09                           	JNE	L40
   129 000000FB 83 FE 02                        	CMP	ESI,2
   130 000000FE 0F 8F 0000026D                  	JG	L87
   131 00000104                                 L40:
   132 00000104 80 38 2D                        	CMP	BYTE [EAX],45
   133 00000107 75 09                           	JNE	L44
   134 00000109 83 FE 02                        	CMP	ESI,2
   135 0000010C 0F 8F 00000232                  	JG	L88
   136 00000112                                 L44:
   137 00000112 80 38 2A                        	CMP	BYTE [EAX],42
   138 00000115 75 09                           	JNE	L48
   139 00000117 83 FE 01                        	CMP	ESI,1
   140 0000011A 0F 8F 000001F6                  	JG	L89
   141 00000120                                 L48:
   142 00000120 80 38 2F                        	CMP	BYTE [EAX],47
   143 00000123 75 09                           	JNE	L52
   144 00000125 83 FE 01                        	CMP	ESI,1
   145 00000128 0F 8F 000001A0                  	JG	L90
   146 0000012E                                 L52:
   147 0000012E 80 38 25                        	CMP	BYTE [EAX],37
   148 00000131 75 09                           	JNE	L56
   149 00000133 83 FE 01                        	CMP	ESI,1
   150 00000136 0F 8F 00000157                  	JG	L91
   151 0000013C                                 L56:
   152 0000013C 80 38 3C                        	CMP	BYTE [EAX],60
   153 0000013F 75 0F                           	JNE	L60
   154 00000141 80 78 01 3C                     	CMP	BYTE [1+EAX],60
   155 00000145 75 09                           	JNE	L60
   156 00000147 83 FE 03                        	CMP	ESI,3
   157 0000014A 0F 8F 00000109                  	JG	L92
   158 00000150                                 L60:
   159 00000150 80 38 3E                        	CMP	BYTE [EAX],62
   160 00000153 75 0F                           	JNE	L64
   161 00000155 80 78 01 3E                     	CMP	BYTE [1+EAX],62
   162 00000159 75 09                           	JNE	L64
   163 0000015B 83 FE 03                        	CMP	ESI,3
   164 0000015E 0F 8F 000000BB                  	JG	L93
   165 00000164                                 L64:
   166 00000164 80 38 26                        	CMP	BYTE [EAX],38
   167 00000167 75 09                           	JNE	L68
   168 00000169 83 FE 04                        	CMP	ESI,4
   169 0000016C 0F 8F 00000084                  	JG	L94
   170 00000172                                 L68:
   171 00000172 80 38 5E                        	CMP	BYTE [EAX],94
   172 00000175 75 05                           	JNE	L72
   173 00000177 83 FE 05                        	CMP	ESI,5
   174 0000017A 7F 51                           	JG	L95
   175 0000017C                                 L72:
   176 0000017C 80 38 7C                        	CMP	BYTE [EAX],124
   177 0000017F 75 38                           	JNE	L37
   178 00000181 83 FE 06                        	CMP	ESI,6
   179 00000184 7E 33                           	JLE	L37
   180 00000186 40                              	INC	EAX
   181 00000187 50                              	PUSH	EAX
   182 00000188 E8 FFFFFEE9                     	CALL	_skipspace
   183 0000018D 6A 06                           	PUSH	6
   184 0000018F 89 45 F0                        	MOV	DWORD [-16+EBP],EAX
   185 00000192 8D 45 F0                        	LEA	EAX,DWORD [-16+EBP]
   186 00000195 50                              	PUSH	EAX
   187 00000196 E8 FFFFFEF0                     	CALL	_getnum
   188 0000019B 83 C4 0C                        	ADD	ESP,12
   189 0000019E 3D 80000001                     	CMP	EAX,-2147483647
   190 000001A3 89 45 EC                        	MOV	DWORD [-20+EBP],EAX
   191 000001A6 75 0A                           	JNE	L96
   192 000001A8                                 L77:
   193 000001A8 BB 80000001                     	MOV	EBX,-2147483647
   194 000001AD E9 FFFFFF2C                     	JMP	L36
   195 000001B2                                 L96:
   196 000001B2 09 C3                           	OR	EBX,EAX
   197 000001B4 E9 FFFFFF25                     	JMP	L36
   198 000001B9                                 L37:
   199 000001B9 FF 75 F0                        	PUSH	DWORD [-16+EBP]
   200 000001BC E8 FFFFFEB5                     	CALL	_skipspace
   201 000001C1 89 07                           	MOV	DWORD [EDI],EAX
   202 000001C3 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   203 000001C6 89 D8                           	MOV	EAX,EBX
   204 000001C8 5B                              	POP	EBX
   205 000001C9 5E                              	POP	ESI
   206 000001CA 5F                              	POP	EDI
   207 000001CB 5D                              	POP	EBP
   208 000001CC C3                              	RET
   209 000001CD                                 L95:
   210 000001CD 40                              	INC	EAX
   211 000001CE 50                              	PUSH	EAX
   212 000001CF E8 FFFFFEA2                     	CALL	_skipspace
   213 000001D4 6A 05                           	PUSH	5
   214 000001D6 89 45 F0                        	MOV	DWORD [-16+EBP],EAX
   215 000001D9 8D 45 F0                        	LEA	EAX,DWORD [-16+EBP]
   216 000001DC 50                              	PUSH	EAX
   217 000001DD E8 FFFFFEA9                     	CALL	_getnum
   218 000001E2 83 C4 0C                        	ADD	ESP,12
   219 000001E5 3D 80000001                     	CMP	EAX,-2147483647
   220 000001EA 89 45 EC                        	MOV	DWORD [-20+EBP],EAX
   221 000001ED 74 B9                           	JE	L77
   222 000001EF 31 C3                           	XOR	EBX,EAX
   223 000001F1 E9 FFFFFEE8                     	JMP	L36
   224 000001F6                                 L94:
   225 000001F6 40                              	INC	EAX
   226 000001F7 50                              	PUSH	EAX
   227 000001F8 E8 FFFFFE79                     	CALL	_skipspace
   228 000001FD 6A 04                           	PUSH	4
   229 000001FF 89 45 F0                        	MOV	DWORD [-16+EBP],EAX
   230 00000202 8D 45 F0                        	LEA	EAX,DWORD [-16+EBP]
   231 00000205 50                              	PUSH	EAX
   232 00000206 E8 FFFFFE80                     	CALL	_getnum
   233 0000020B 83 C4 0C                        	ADD	ESP,12
   234 0000020E 3D 80000001                     	CMP	EAX,-2147483647
   235 00000213 89 45 EC                        	MOV	DWORD [-20+EBP],EAX
   236 00000216 74 90                           	JE	L77
   237 00000218 21 C3                           	AND	EBX,EAX
   238 0000021A E9 FFFFFEBF                     	JMP	L36
   239 0000021F                                 L93:
   240 0000021F 83 C0 02                        	ADD	EAX,2
   241 00000222 50                              	PUSH	EAX
   242 00000223 E8 FFFFFE4E                     	CALL	_skipspace
   243 00000228 6A 03                           	PUSH	3
   244 0000022A 89 45 F0                        	MOV	DWORD [-16+EBP],EAX
   245 0000022D 8D 45 F0                        	LEA	EAX,DWORD [-16+EBP]
   246 00000230 50                              	PUSH	EAX
   247 00000231 E8 FFFFFE55                     	CALL	_getnum
   248 00000236 83 C4 0C                        	ADD	ESP,12
   249 00000239 3D 80000001                     	CMP	EAX,-2147483647
   250 0000023E 89 45 EC                        	MOV	DWORD [-20+EBP],EAX
   251 00000241 0F 84 FFFFFF61                  	JE	L77
   252 00000247 85 C0                           	TEST	EAX,EAX
   253 00000249 0F 84 FFFFFF59                  	JE	L77
   254 0000024F 8A 4D EC                        	MOV	CL,BYTE [-20+EBP]
   255 00000252 D3 FB                           	SAR	EBX,CL
   256 00000254 E9 FFFFFE85                     	JMP	L36
   257 00000259                                 L92:
   258 00000259 83 C0 02                        	ADD	EAX,2
   259 0000025C 50                              	PUSH	EAX
   260 0000025D E8 FFFFFE14                     	CALL	_skipspace
   261 00000262 6A 03                           	PUSH	3
   262 00000264 89 45 F0                        	MOV	DWORD [-16+EBP],EAX
   263 00000267 8D 45 F0                        	LEA	EAX,DWORD [-16+EBP]
   264 0000026A 50                              	PUSH	EAX
   265 0000026B E8 FFFFFE1B                     	CALL	_getnum
   266 00000270 83 C4 0C                        	ADD	ESP,12
   267 00000273 3D 80000001                     	CMP	EAX,-2147483647
   268 00000278 89 45 EC                        	MOV	DWORD [-20+EBP],EAX
   269 0000027B 0F 84 FFFFFF27                  	JE	L77
   270 00000281 85 C0                           	TEST	EAX,EAX
   271 00000283 0F 84 FFFFFF1F                  	JE	L77
   272 00000289 8A 4D EC                        	MOV	CL,BYTE [-20+EBP]
   273 0000028C D3 E3                           	SAL	EBX,CL
   274 0000028E E9 FFFFFE4B                     	JMP	L36
   275 00000293                                 L91:
   276 00000293 40                              	INC	EAX
   277 00000294 50                              	PUSH	EAX
   278 00000295 E8 FFFFFDDC                     	CALL	_skipspace
   279 0000029A 6A 01                           	PUSH	1
   280 0000029C 89 45 F0                        	MOV	DWORD [-16+EBP],EAX
   281 0000029F 8D 45 F0                        	LEA	EAX,DWORD [-16+EBP]
   282 000002A2 50                              	PUSH	EAX
   283 000002A3 E8 FFFFFDE3                     	CALL	_getnum
   284 000002A8 83 C4 0C                        	ADD	ESP,12
   285 000002AB 3D 80000001                     	CMP	EAX,-2147483647
   286 000002B0 89 45 EC                        	MOV	DWORD [-20+EBP],EAX
   287 000002B3 0F 84 FFFFFEEF                  	JE	L77
   288 000002B9 85 C0                           	TEST	EAX,EAX
   289 000002BB 0F 84 FFFFFEE7                  	JE	L77
   290 000002C1 89 D8                           	MOV	EAX,EBX
   291 000002C3 99                              	CDQ
   292 000002C4 F7 7D EC                        	IDIV	DWORD [-20+EBP]
   293 000002C7 89 D3                           	MOV	EBX,EDX
   294 000002C9 E9 FFFFFE10                     	JMP	L36
   295 000002CE                                 L90:
   296 000002CE 40                              	INC	EAX
   297 000002CF 50                              	PUSH	EAX
   298 000002D0 E8 FFFFFDA1                     	CALL	_skipspace
   299 000002D5 6A 01                           	PUSH	1
   300 000002D7 89 45 F0                        	MOV	DWORD [-16+EBP],EAX
   301 000002DA 8D 45 F0                        	LEA	EAX,DWORD [-16+EBP]
   302 000002DD 50                              	PUSH	EAX
   303 000002DE E8 FFFFFDA8                     	CALL	_getnum
   304 000002E3 83 C4 0C                        	ADD	ESP,12
   305 000002E6 3D 80000001                     	CMP	EAX,-2147483647
   306 000002EB 89 45 EC                        	MOV	DWORD [-20+EBP],EAX
   307 000002EE 74 04                           	JE	L53
   308 000002F0 85 C0                           	TEST	EAX,EAX
   309 000002F2 75 15                           	JNE	L97
   310 000002F4                                 L53:
   311 000002F4 68 [0000001E]                   	PUSH	LC2
   312 000002F9 BB 80000001                     	MOV	EBX,-2147483647
   313 000002FE E8 [00000000]                   	CALL	_api_putstr0
   314 00000303                                 L80:
   315 00000303 59                              	POP	ECX
   316 00000304 E9 FFFFFDD5                     	JMP	L36
   317 00000309                                 L97:
   318 00000309 89 D8                           	MOV	EAX,EBX
   319 0000030B 99                              	CDQ
   320 0000030C F7 7D EC                        	IDIV	DWORD [-20+EBP]
   321 0000030F 89 C3                           	MOV	EBX,EAX
   322 00000311 E9 FFFFFDC8                     	JMP	L36
   323 00000316                                 L89:
   324 00000316 40                              	INC	EAX
   325 00000317 50                              	PUSH	EAX
   326 00000318 E8 FFFFFD59                     	CALL	_skipspace
   327 0000031D 6A 01                           	PUSH	1
   328 0000031F 89 45 F0                        	MOV	DWORD [-16+EBP],EAX
   329 00000322 8D 45 F0                        	LEA	EAX,DWORD [-16+EBP]
   330 00000325 50                              	PUSH	EAX
   331 00000326 E8 FFFFFD60                     	CALL	_getnum
   332 0000032B 83 C4 0C                        	ADD	ESP,12
   333 0000032E 3D 80000001                     	CMP	EAX,-2147483647
   334 00000333 89 45 EC                        	MOV	DWORD [-20+EBP],EAX
   335 00000336 0F 84 FFFFFE6C                  	JE	L77
   336 0000033C 0F AF D8                        	IMUL	EBX,EAX
   337 0000033F E9 FFFFFD9A                     	JMP	L36
   338 00000344                                 L88:
   339 00000344 40                              	INC	EAX
   340 00000345 50                              	PUSH	EAX
   341 00000346 E8 FFFFFD2B                     	CALL	_skipspace
   342 0000034B 6A 02                           	PUSH	2
   343 0000034D 89 45 F0                        	MOV	DWORD [-16+EBP],EAX
   344 00000350 8D 45 F0                        	LEA	EAX,DWORD [-16+EBP]
   345 00000353 50                              	PUSH	EAX
   346 00000354 E8 FFFFFD32                     	CALL	_getnum
   347 00000359 83 C4 0C                        	ADD	ESP,12
   348 0000035C 3D 80000001                     	CMP	EAX,-2147483647
   349 00000361 89 45 EC                        	MOV	DWORD [-20+EBP],EAX
   350 00000364 0F 84 FFFFFE3E                  	JE	L77
   351 0000036A 29 C3                           	SUB	EBX,EAX
   352 0000036C E9 FFFFFD6D                     	JMP	L36
   353 00000371                                 L87:
   354 00000371 40                              	INC	EAX
   355 00000372 50                              	PUSH	EAX
   356 00000373 E8 FFFFFCFE                     	CALL	_skipspace
   357 00000378 6A 02                           	PUSH	2
   358 0000037A 89 45 F0                        	MOV	DWORD [-16+EBP],EAX
   359 0000037D 8D 45 F0                        	LEA	EAX,DWORD [-16+EBP]
   360 00000380 50                              	PUSH	EAX
   361 00000381 E8 FFFFFD05                     	CALL	_getnum
   362 00000386 83 C4 0C                        	ADD	ESP,12
   363 00000389 3D 80000001                     	CMP	EAX,-2147483647
   364 0000038E 89 45 EC                        	MOV	DWORD [-20+EBP],EAX
   365 00000391 0F 84 FFFFFE11                  	JE	L77
   366 00000397 01 C3                           	ADD	EBX,EAX
   367 00000399 E9 FFFFFD40                     	JMP	L36
   368 0000039E                                 L86:
   369 0000039E 6A 00                           	PUSH	0
   370 000003A0 8D 45 F0                        	LEA	EAX,DWORD [-16+EBP]
   371 000003A3 50                              	PUSH	EAX
   372 000003A4 51                              	PUSH	ECX
   373 000003A5 E8 [00000000]                   	CALL	_strtol
   374 000003AA                                 L81:
   375 000003AA 89 C3                           	MOV	EBX,EAX
   376 000003AC 83 C4 0C                        	ADD	ESP,12
   377 000003AF E9 FFFFFD2A                     	JMP	L36
   378 000003B4                                 L85:
   379 000003B4 8D 41 01                        	LEA	EAX,DWORD [1+ECX]
   380 000003B7 50                              	PUSH	EAX
   381 000003B8 E8 FFFFFCB9                     	CALL	_skipspace
   382 000003BD 6A 09                           	PUSH	9
   383 000003BF 89 45 F0                        	MOV	DWORD [-16+EBP],EAX
   384 000003C2 8D 45 F0                        	LEA	EAX,DWORD [-16+EBP]
   385 000003C5 50                              	PUSH	EAX
   386 000003C6 E8 FFFFFCC0                     	CALL	_getnum
   387 000003CB 83 C4 0C                        	ADD	ESP,12
   388 000003CE 89 C3                           	MOV	EBX,EAX
   389 000003D0 8B 45 F0                        	MOV	EAX,DWORD [-16+EBP]
   390 000003D3 80 38 29                        	CMP	BYTE [EAX],41
   391 000003D6 0F 85 FFFFFDCC                  	JNE	L77
   392 000003DC 40                              	INC	EAX
   393 000003DD 50                              	PUSH	EAX
   394 000003DE E8 FFFFFC93                     	CALL	_skipspace
   395 000003E3 89 45 F0                        	MOV	DWORD [-16+EBP],EAX
   396 000003E6 E9 FFFFFF18                     	JMP	L80
   397 000003EB                                 L84:
   398 000003EB 8D 41 01                        	LEA	EAX,DWORD [1+ECX]
   399 000003EE 50                              	PUSH	EAX
   400 000003EF E8 FFFFFC82                     	CALL	_skipspace
   401 000003F4 6A 00                           	PUSH	0
   402 000003F6 89 45 F0                        	MOV	DWORD [-16+EBP],EAX
   403 000003F9 8D 45 F0                        	LEA	EAX,DWORD [-16+EBP]
   404 000003FC 50                              	PUSH	EAX
   405 000003FD E8 FFFFFC89                     	CALL	_getnum
   406 00000402 83 C4 0C                        	ADD	ESP,12
   407 00000405 89 C3                           	MOV	EBX,EAX
   408 00000407 3D 80000001                     	CMP	EAX,-2147483647
   409 0000040C 0F 84 FFFFFDA7                  	JE	L37
   410 00000412 F7 D3                           	NOT	EBX
   411 00000414 E9 FFFFFCC5                     	JMP	L36
   412 00000419                                 L83:
   413 00000419 8D 41 01                        	LEA	EAX,DWORD [1+ECX]
   414 0000041C 50                              	PUSH	EAX
   415 0000041D E8 FFFFFC54                     	CALL	_skipspace
   416 00000422 6A 00                           	PUSH	0
   417 00000424 89 45 F0                        	MOV	DWORD [-16+EBP],EAX
   418 00000427 8D 45 F0                        	LEA	EAX,DWORD [-16+EBP]
   419 0000042A 50                              	PUSH	EAX
   420 0000042B E8 FFFFFC5B                     	CALL	_getnum
   421 00000430 83 C4 0C                        	ADD	ESP,12
   422 00000433 89 C3                           	MOV	EBX,EAX
   423 00000435 3D 80000001                     	CMP	EAX,-2147483647
   424 0000043A 0F 84 FFFFFD79                  	JE	L37
   425 00000440 F7 DB                           	NEG	EBX
   426 00000442 E9 FFFFFC97                     	JMP	L36
   427 00000447                                 L82:
   428 00000447 8D 41 01                        	LEA	EAX,DWORD [1+ECX]
   429 0000044A 50                              	PUSH	EAX
   430 0000044B E8 FFFFFC26                     	CALL	_skipspace
   431 00000450 6A 00                           	PUSH	0
   432 00000452 89 45 F0                        	MOV	DWORD [-16+EBP],EAX
   433 00000455 8D 45 F0                        	LEA	EAX,DWORD [-16+EBP]
   434 00000458 50                              	PUSH	EAX
   435 00000459 E8 FFFFFC2D                     	CALL	_getnum
   436 0000045E E9 FFFFFF47                     	JMP	L81
